---

// import { CollectionEntry, getCollection } from 'astro:content';
// import BlogPost from '../../layouts/BlogPost.astro';

// Generate a new path for every collection entry
// export async function getStaticPaths() {
//   const blogEntries = await getCollection("blog");
//   return blogEntries.map((entry) => ({
//     params: { slug: entry.slug },
//     props: { entry },
//   }));
// }

// // Get the entry directly from the prop on render
// const { entry } = Astro.props;
// const { Content } = await entry.render();


import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";


import { getAllPublished } from '../../lib/notion';

// // to convert markdown to html
import { marked } from 'marked';



export async function getStaticPaths() {

    
    const articles = await getAllPublished();

    const allArticles = articles.map((article) => {

        return{
            params: { slug: article.metadata.slug },
            props: article
        }
    });

    return allArticles;

}



const post = Astro.props;

console.log('wat is post',post);

const title = post.metadata.title;
const body = marked.parse(typeof post.markdown.parent === 'string' ? post.markdown.parent : '');

---

<Layout title={title}>
  <Container>

    

    <div class="mx-auto max-w-[735px] mt-14">

      <span class="text-blue-400 uppercase tracking-wider text-sm font-medium">
        <!-- {entry.data.category} -->
      </span>
      <h1
        class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-1 lg:leading-tight">
        {title}
      </h1>

      <div class="flex gap-2 mt-3 items-center flex-wrap md:flex-nowrap">
        <span class="text-gray-400">
          Robert Verhoeven
        </span>
        
        <!-- <span class="text-gray-400 hidden md:block">•</span>
        <div class="w-full md:w-auto flex flex-wrap gap-3">
          {
            entry.data.tags.map((tag) => (
              <span class="text-sm text-gray-500">#{tag}</span>
            ))
          }
        </div> -->
      </div>
               <div id="toc"></div>
    </div>



    <div class="mx-auto prose prose-lg mt-6" set:html={body}>
        
    </div>
    <div class="text-center mt-8">
      <a
        href="/blog"
        class="bg-gray-100 px-5 py-3 rounded-md hover:bg-gray-200 transition"
        >← Back to Blog</a
      >
    </div>
  </Container>
</Layout>

<script is:inline>
  document.addEventListener("DOMContentLoaded", function () {
    const tocDiv = document.getElementById("toc");
    const headings = document.querySelectorAll(".prose h2");

    // Create a container div for the table of contents
    const tocContainer = document.createElement("div");
    tocContainer.className = "bg-gray-200 p-4 rounded-lg shadow-md";

    // Create an unordered list for the table of contents
    const tocList = document.createElement("ul");
    tocList.className = "list-inside list-disc";

    headings.forEach((heading, index) => {
      // Create a unique ID for each heading if it doesn't have one
      if (!heading.id) {
        heading.id = `section-${index}`;
      }

      // Create a list item with a link to the heading
      const listItem = document.createElement("li");
      listItem.className = "mb-2";

      const link = document.createElement("a");
      link.textContent = heading.textContent;
      link.href = `#${heading.id}`;
      link.className = "text-blue-600 hover:underline";

      listItem.appendChild(link);
      tocList.appendChild(listItem);
    });

    // Append the table of contents to the container div
    tocContainer.appendChild(tocList);

    // Append the container div to the "toc" div
    tocDiv.appendChild(tocContainer);
  });
</script>

